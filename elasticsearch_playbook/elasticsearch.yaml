---
- name: Install packages
  hosts: tag_Group_Elasticsearch:tag_Group_Kibana:tag_Group_Logstash:tag_Kibana_Group
  become: true
  tasks:
  - name: Install packages
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - htop
        - nmap


- name: Determine nodes to join in NonProd
  hosts: tag_Group_Elasticsearch
  become: true
  tasks:
  - name: Setting nodes IPs 
    set_fact:
      NonProd_list: "{{ groups['tag_Environment_NonProd'] | map('extract', hostvars, ['ansible_host']) | list }}" # instead 'ansible_host' you can use the folloving variables as well: ansible_fqdn, ec2_private_ip_address or ansible_nodename
   
- name: Register variables based on tags
  hosts: tag_Group_Elasticsearch
  become: true
  tasks:
  - name: Cluster name variable 
    set_fact:
      cluster_name: "{{ ec2_tag_ClusterName }}"
    when: "'ec2' in group_names"

# TEST environment configuration

- name: Setting up test Elasticsearch
  hosts: tag_ElasticsearchTest_Group
  become: true
  tags:
  - test
  tasks:
  - name: Setting nodes IPs 
    set_fact:
      Test_list: "{{ groups['tag_Environment_Test'] | map('extract', hostvars, ['ansible_host']) | list }}" # instead 'ansible_host' you can use the folloving variables as well: ansible_fqdn, ec2_private_ip_address or ansible_nodename

  - name: Elasticsearch test role
    import_role: 
      name: elastic.elasticsearch
    when: ('tag_Environment_Test' in group_names)
    vars:
      es_heap_size: "512m"
      es_config:
        network.host: 0.0.0.0
        cluster.name: "{{ cluster_name }}"
        cluster.initial_master_nodes: "{{ Test_list | join(',') }}"
        discovery.seed_hosts: "{{ Test_list | join(',') }}"
        http.port: 9201
        node.master: true
        bootstrap.memory_lock: false
      es_api_port: 9201
      es_plugins:
       - plugin: ingest-attachment

# Production environment configuration

- name: Setting up production Elasticsearch
  hosts: tag_ElasticsearchProd_Group
  become: true
  tags:
  - prod
  tasks:
  - name: Setting nodes IPs 
    set_fact:
      Prod_list: "{{ groups['tag_ElasticsearchProd_Group'] | default('test', true) | map('extract', hostvars, ['ansible_host']) | list }}" # instead 'ansible_host' you can use the folloving variables as well: ansible_fqdn, ec2_private_ip_address or ansible_nodename 

  - name: Elasticsearch_prod_set_up
    import_role:
      name: elastic.elasticsearch
    when: ('tag_Environment_Production' in group_names)
    vars:
      es_heap_size: "512m"
      es_config:
        network.host: 0.0.0.0
        cluster.name: "{{ cluster_name }}"
        cluster.initial_master_nodes: "{{ Prod_list | join(',') }}"
        discovery.seed_hosts: "{{ Prod_list | join(',') }}"
        http.port: 9201
        node.master: true
        bootstrap.memory_lock: false
      es_api_port: 9201
      es_plugins:
       - plugin: ingest-attachment
  
# NonProd environment configuration

- name: Elasticsearch_non-prod_set_up
  hosts: tag_Group_Elasticsearch
  tags:
  - nonprod
  roles:
    - role: elastic.elasticsearch
      when: ('tag_Environment_NonProd' in group_names)
  vars:
    es_heap_size: "512m"
    es_config:
      network.host: 0.0.0.0
      cluster.name: "{{ cluster_name }}"
      cluster.initial_master_nodes: "{{ NonProd_list | join(',') }}"
      discovery.seed_hosts: "{{ NonProd_list | join(',') }}"
      http.port: 9200
      node.master: true
      bootstrap.memory_lock: false
    es_api_port: 9200
    es_plugins:
     - plugin: ingest-attachment
  


- name: Notification
  hosts: tag_Group_Elasticsearch
  ignore_unreachable: True 
  tasks:
    - debug:
        msg: "Elasticsearch job finished successfully!"
                                                                                                                                                                             

