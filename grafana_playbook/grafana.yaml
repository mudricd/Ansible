---

# Install packages

- name: Install packages
  hosts: tag_Group_Grafana
  become: true
  tasks:
    - name: Install packages
      yum:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - htop
          - python2-pip
          - docker
    - name: PIP install Docker
      pip:
        name: docker

- name: Setting up test Grafana
  hosts: tag_Group_Grafana
  become: true
  tags: # Tag which is used in Jenkins file to skip this job
  - test
  tasks:
  - name: Grafana production role # Grafana configuration
    import_role: 
      name: ansible-grafana
    vars:
      grafana_security:
        admin_user: admin
        admin_password: "{{ admin_password }}"
      grafana_datasources:
        - name: elasticsearch
          type: elasticsearch
          access: server
          database: "metricbeat-7.5.2"
          url: 'http://localhost:9200'
          readOnly: false
          editable: true
          basicAuth: false
          jsonData:
            timeField: "@timestamp"
            esVersion: 70
            maxConcurrentShardRequests: 5      
      grafana_dashboards:
        - dashboard_id: 11567
          revision_id: 1
          datasource: elasticsearch

  # - name: Create elasticsearch datasource
  #   grafana_datasource:
  #     name: "datasource-elastic"
  #     grafana_url: "https://grafana.company.com"
  #     grafana_user: "admin"
  #     grafana_password: "xxxxxx"
  #     org_id: "1"
  #     ds_type: "elasticsearch"
  #     ds_url: "https://elastic.company.com:9200"
  #     database: "[logstash_]YYYY.MM.DD"
  #     basic_auth_user: "grafana"
  #     basic_auth_password: "******"
  #     time_field: "@timestamp"
  #     time_interval: "1m"
  #     interval: "Daily"
  #     es_version: 56
  #     max_concurrent_shard_requests: 42
  #     tls_ca_cert: "/etc/ssl/certs/ca.pem"


  post_tasks:
  - name: Notification
    debug:
      msg: "Test Grafana job finished successfully!"
