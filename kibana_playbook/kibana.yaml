---

- name: Install packages
  hosts: tag_Kibana_Group:tag_KibanaProd_Group
  become: true
  tasks:
    - name: Install packages
      yum:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - htop
          - python2-pip
          - docker

- name: PIP Install
  hosts: tag_Kibana_Group:tag_KibanaProd_Group
  become: true
  tasks:
  - name: Install docker
    pip:
      name: docker
    
- name: Start and enable Docker service
  hosts: tag_Kibana_Group:tag_KibanaProd_Group
  become: true
  tasks:
  - name: Services
    service:
      name: docker
      state: started
      enabled: yes

- name: Nginx
  hosts: tag_Kibana_Group:tag_KibanaProd_Group
  become: true
  tasks:
  - name: Nginx file
    copy:
      src: /etc/ansible/files/nginx.conf
      dest: /root/nginx.conf

- name: Create nginx container
  hosts: tag_Kibana_Group:tag_KibanaProd_Group
  become: true
  tasks:
  - name: Create container
    docker_container:
      name: nginx
      image: nginx:latest
      volumes:
        - /root/nginx.conf:/etc/nginx/nginx.conf:rw
      published_ports:
        - "80:80"
        
- name: Determine nodes to join in Test
  hosts: tag_Environment_Test
  become: true
  tags:
  - test
  tasks:
  - name: Setting nodes IPs 
    set_fact:
      Test_list: "{{ groups['tag_Environment_Test'] | map('extract', hostvars, ['ansible_host']) | list }}" # instead 'ansible_host' you can use the folloving variables as well: ansible_fqdn, ec2_private_ip_address or ansible_nodename

- name: Determine nodes to join in Prod
  hosts: tag_Group_Elasticsearch
  become: true
  tasks:
  - name: Setting nodes IPs 
    set_fact:
      Prod_list: "{{ groups['tag_Environment_Production'] | default('test', true) | map('extract', hostvars, ['ansible_host']) | list }}" 
  
- name: Test Kibana list
  hosts: tag_Environment_Test
  become: true
  vars:
    TestKibanaList: []
  tasks:
  - name: Create Kibana servers list 
    set_fact:
       TestKibanaList: "{{ Test_list | map('regex_replace', '(.*)', 'https://\\1:8000') | list }}"
  - name: Debug 
    debug:
       msg: "{{ TestKibanaList }}"

- name: Prod Kibana list
  hosts: tag_KibanaProd_Group
  become: true
  tasks:
  - name: Create Kibana servers list 
    set_fact:
       ellist: "{{ Prod_list | map('regex_replace', '(.*)', 'https://\\1:8000') | list }}"
  - name: Debug 
    debug:
       msg: "{{ ellist }}"
      
- name: Kibana_test_set_up
  hosts: tag_Environment_Test
  roles:
  - role: geerlingguy.kibana
    when: ('tag_Environment_Test' in group_names)
  vars:
    kibana_version: 7.x
    kibana_config_template: "/etc/ansible/templates/kibana.j2"
    kibana_elasticsearch_url: "{{ TestKibanaList }}"
    kibana_elasticsearch_hosts: "{{ TestKibanaList }}"

- name: Kibana_prod_set_up
  hosts: tag_KibanaProd_Group
  roles:
  - role: geerlingguy.kibana
    when: ('tag_Environment_Production' in group_names)
  vars:
    kibana_version: 7.x
    kibana_config_template: "/etc/ansible/templates/kibana.j2"
    kibana_elasticsearch_url: "http://ip-10-174-21-11.tattsgroup.io:9200"
    kibana_elasticsearch_hosts: "http://ip-10-174-21-11.tattsgroup.io:9200"


- name: Notification
  hosts: tag_Environment_Test
  become: true
  tasks:
  - name: Notification
    debug:
      msg: "Kibana job finished successfully!"
      
